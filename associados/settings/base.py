#!/usr/bin/env python
# coding: utf-8
"""
Django settings for python-brasil associados project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""
import os
import dj_database_url

from decouple import config, Csv


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from django.urls import reverse_lazy


BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='yc!+ii!psza0mi)&amp;vnn_rdsip5ipdyr(0w8hjllxw6p)!wgo1e')


# This is a security measure to prevent HTTP Host header attacks.
# https://docs.djangoproject.com/pt-br/1.10/ref/settings/#allowed-hosts

ALLOWED_HOSTS = config('DJANGO_ALLOWED_HOSTS', default='*', cast=Csv())


# This is a security measure to prevent HTTP Host header attacks.
# https://docs.djangoproject.com/pt-br/1.10/ref/settings/#internal-ips

INTERNAL_IPS = config('INTERNAL_IPS', default='127.0.0.1', cast=Csv())


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', default=True, cast=bool)


# Application definition

INSTALLED_APPS = [
    # apps
    'associados',
    'app.members',
    'app.payment',
    'app.core',

    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.flatpages',

    # extra
    'bootstrap_toolkit',
    'pipeline',
    'django_extensions',
    'sorl.thumbnail',
    'django_gravatar',
    'municipios',

]


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'pipeline.middleware.MinifyHTMLMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'
]


SITE_ID = 1

ROOT_URLCONF = 'associados.urls'

APPEND_SLASH = True


# Template Settings
# https://docs.djangoproject.com/en/1.10/topics/templates/#configuration

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    }
]

TEMPLATE_LOADERS = [
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
]

WSGI_APPLICATION = 'associados.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

DEFAULT_LANGUAGE = 1

LANGUAGE_CODE = 'pt-br'

LANGUAGES = [
    ('pt-BR', 'Portuguese Brazil')
]

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = config('USE_TZ', cast=bool, default=True)

CHARSET = 'utf-8'

USE_THOUSAND_SEPARATOR = True


# A tuple that lists people who get code error notifications.
# https://docs.djangoproject.com/en/1.8/ref/settings/#admins

ADMINS = (
    # ('Marcos Daniel Petry', 'marcospetry@gmail.com'),
    # ('Valder Gallo', 'valdergallo@gmail.com'),
    # ('Carlos Leite', 'carlos.leite@znc.com.br'),
    ('Osvaldo Santana Neto', 'osantana@python.org.br'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': config(
        'DATABASE_URL',
        default='postgresql://associados:assocdev@localhost:5432/associados',
        cast=dj_database_url.parse
    )
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'assets')
]

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]


# Email
# https://docs.djangoproject.com/en/1.10/ref/settings/#std:setting-EMAIL_HOST

DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default="contato@python.org.br")

EMAIL_FILE_PATH = config('EMAIL_FILE_PATH', default='')
EMAIL_HOST_USER = config('SENDGRID_USERNAME', default='')
EMAIL_HOST_PASSWORD = config('SENDGRID_PASSWORD', default='')
EMAIL_HOST = config('EMAIL_HOST', default='smtp.sendgrid.net')
EMAIL_PORT = config('EMAIL_PORT', cast=int, default=587)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool, default=True)
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_CONTACT_ADDRESS = DEFAULT_FROM_EMAIL


# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}


# Urls

LOGIN_URL = reverse_lazy('login')

LOGIN_REDIRECT_URL = reverse_lazy('members-dashboard')


# Authentication
# https://docs.djangoproject.com/en/1.10/topics/auth/customizing/

AUTHENTICATION_BACKENDS = (
    'app.authemail.backends.EmailBackend',
)


# Payment

PAYMENT_SYSTEM = config('PAYMENT_SYSTEM', default="PAGSEGURO")
PAYMENT_CREDENTIALS_EMAIL = config('PAYMENT_CREDENTIALS_EMAIL', default='fake@email.com')
PAYMENT_CREDENTIALS_TOKEN = config('PAYMENT_CREDENTIALS_TOKEN', default='faketoken')

PAYMENT_CREDENTIALS = {
    'email': PAYMENT_CREDENTIALS_EMAIL,
    'charset': 'UTF-8',
    'token': PAYMENT_CREDENTIALS_TOKEN,
    'currency': 'BRL',
    'itemId1': '0001',
    'itemQuantity1': 1,
}

PAYMENT_ENDPOINTS_BASE = config('PAYMENT_CREDENTIALS_BASE', default='https://ws.pagseguro.uol.com.br/v2')

PAYMENT_ENDPOINT_WEBCHECKOUT = config(
    'PAYMENT_ENDPOINT_WEBCHECKOUT',
    default='https://pagseguro.uol.com.br/v2/checkout/payment.html?code=')

PAYMENT_ENDPOINT_WEB_PRE_APPROVAL = config(
    'PAYMENT_ENDPOINT_WEB_PRE_APPROVAL',
    default='https://pagseguro.uol.com.br/v2/pre-approval/request.html?code=')


# Github

GITHUB_CLIENT_SECRET = config('GITHUB_CLIENT_SECRET', default='')
GITHUB_CLIENT_ID = config('GITHUB_CLIENT_ID', default='')


# DSN

DSN = config("DJANGO_DSN", default='')


if DSN:
    RAVEN_CONFIG = {
        'dsn': DSN
    }

    INSTALLED_APPS += [
        'raven.contrib.django.raven_compat'
    ]


# Pipeline

PIPELINE = {}

PIPELINE_LESS_BINARY = config('PIPELINE_LESS_BINARY', default='', cast=Csv())

PIPELINE_COMPILERS = config('PIPELINE_COMPILERS', default=(
    'pipeline.compilers.less.LessCompiler,pipeline.compilers.stylus.StylusCompiler'
), cast=Csv())

# You've installed lessc, right?
if config('USE_PRECOMPILERS', default=False, cast=bool):
    COMPRESS_PRECOMPILERS = (
        ('text/less', '/opt/local/lib/node_modules/less/bin/lessc {infile} {outfile}'),
    )

COMPRESS_OUTPUT_DIR = config('COMPRESS_OUTPUT_DIR', default='CACHE')
